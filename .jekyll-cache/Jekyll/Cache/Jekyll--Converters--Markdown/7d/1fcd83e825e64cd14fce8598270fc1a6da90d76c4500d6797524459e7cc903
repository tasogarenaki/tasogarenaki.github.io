I"é<h1 id="1-fundations">1 Fundations</h1>

<ul>
  <li>
    <p>Set the course code</p>

    <ol>
      <li>
        <p>Create a repository from GitHub</p>
      </li>
      <li>
        <p>Create a folder <code class="language-plaintext highlighter-rouge">A</code> on local</p>
      </li>
      <li>
        <pre><code class="language-consoleÂ ">$ cd A
$ git clone https://github.com/my_repository.git
$ cd B (Folder inside A)
$ git remote add skeleton https://github.com/Berkeley-CS61B/skeleton-sp18.git
$ git pull skeleton master
</code></pre>
      </li>
      <li>
        <p>Move the <code class="language-plaintext highlighter-rouge">HelloWorld.java</code> and <code class="language-plaintext highlighter-rouge">HelloNumbers.java</code> that you previously created into the <code class="language-plaintext highlighter-rouge">lab1</code>directory.</p>
      </li>
      <li>
        <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td> --><td class="rouge-code"><pre>$ git add lab1/*
$ git commit -m "completed first part of lab1"
$ git push origin master
</pre></td></tr></tbody></table></code></pre></div>        </div>

        <p><br /></p>
      </li>
    </ol>
  </li>
  <li>
    <p>Some key syntactic features:</p>

    <ul>
      <li>
        <p><code class="language-plaintext highlighter-rouge">public class</code>: all code lives inside of classes.</p>
      </li>
      <li>The code that is run is inside of a method called <code class="language-plaintext highlighter-rouge">main</code>, which is declared as <code class="language-plaintext highlighter-rouge">public static void main(String[] args)</code>.</li>
      <li>Use <code class="language-plaintext highlighter-rouge">{</code> and <code class="language-plaintext highlighter-rouge">}</code> to denote the beginning and the end of a section of code.</li>
      <li>Statements must end with semi-colons <code class="language-plaintext highlighter-rouge">;</code>.</li>
      <li>Comments with <code class="language-plaintext highlighter-rouge">/* */</code> or <code class="language-plaintext highlighter-rouge">//</code>.</li>
      <li>Javadoc: <code class="language-plaintext highlighter-rouge">/** */</code> for methods or classes.</li>
      <li>Compiler and Run Java program via Terminal:</li>
    </ul>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td> --><td class="rouge-code"><pre>$ javac name.java
$ java name
</pre></td></tr></tbody></table></code></pre></div>    </div>

    <ul>
      <li>
        <p><code class="language-plaintext highlighter-rouge">static</code> type for all variables and expressions</p>

        <ul>
          <li>Variables must be declared before it is used, and must have a specific type and the type can never change.
            <ul>
              <li>Let the programmer know exactly what sort of objekt is working with</li>
              <li>No type erros</li>
            </ul>
          </li>
        </ul>

        <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td> --><td class="rouge-code"><pre><span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
    
<span class="n">string</span> <span class="n">x</span> <span class="o">=</span> <span class="s">"test"</span><span class="o">;</span>  <span class="c1">// error</span>
</pre></td></tr></tbody></table></code></pre></div>        </div>
      </li>
      <li>
        <p><code class="language-plaintext highlighter-rouge">System.out.print</code> will not print a newline (return), <code class="language-plaintext highlighter-rouge">System.out.println</code> will print a newline.</p>
      </li>
      <li>
        <p>Functions:</p>

        <ul>
          <li>Functions must be declared as part of a class. A function that is part of a class is method, so all functions are methods.</li>
          <li>To define a function use <code class="language-plaintext highlighter-rouge">public static</code> (e.g. Python <code class="language-plaintext highlighter-rouge">def</code>).</li>
          <li>All parameters of a functions must be declared.</li>
        </ul>

        <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td> --><td class="rouge-code"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">LargerDemo</span> <span class="o">{</span>
    <span class="cm">/** Returns the larger of x and y. */</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">larger</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">y</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">x</span> <span class="o">&gt;</span> <span class="n">y</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">return</span> <span class="n">x</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">y</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">larger</span><span class="o">(</span><span class="mi">8</span><span class="o">,</span> <span class="mi">10</span><span class="o">));</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div>        </div>
      </li>
    </ul>
  </li>
</ul>

<h2 id="11-theme-x">1.1 Theme x</h2>

<h1 id="2-examples">2 Examples</h1>

:ET